name: Windows - RustDesk ID Retrieval (Fixed and Correct Password)

on:
  workflow_dispatch:

jobs:
  rustdesk_id_retrieval:
    name: RustDesk Setup and ID Retrieval
    runs-on: windows-latest
    timeout-minutes: 400

    steps:
      - name: Setup Environment
        run: |
          $workDir = "$env:TEMP\rustdesk_setup"
          New-Item -ItemType Directory -Path $workDir -Force | Out-Null
          "work_dir=$workDir" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Download RustDesk
        id: download_rustdesk_step
        run: |
          $workDir = "$env:TEMP\rustdesk_setup"
          $downloadPath = "$workDir\rustdesk.exe"
          $url = "https://github.com/rustdesk/rustdesk/releases/latest/download/rustdesk-x86_64.exe"
          Invoke-WebRequest -Uri $url -OutFile $downloadPath -ErrorAction Stop
          "rustdesk_exe_path=$downloadPath" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "download_success=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create RustDesk Config with Password
        if: steps.download_rustdesk_step.outputs.download_success == 'true'
        run: |
          $configDir = "$env:APPDATA\RustDesk\config"
          New-Item -ItemType Directory -Path $configDir -Force | Out-Null
          $configFile = "$configDir\RustDesk.toml"

          $password = "GitHubActions123!"

          $configContent = @"
[global]
password = "$password"
"@
          Set-Content -Path $configFile -Value $configContent -Encoding UTF8

          Write-Host "RustDesk password set to: $password"

      - name: Start RustDesk to Generate ID
        if: steps.download_rustdesk_step.outputs.download_success == 'true'
        run: |
          $exe = "${{ steps.download_rustdesk_step.outputs.rustdesk_exe_path }}"
          Start-Process -FilePath $exe -WindowStyle Hidden
          Start-Sleep -Seconds 30

      - name: Get RustDesk ID
        id: get_rustdesk_id
        run: |
          $exe = "${{ steps.download_rustdesk_step.outputs.rustdesk_exe_path }}"
          $output = cmd /c "`"$exe`" --get-id 2>&1"
          Write-Host "RustDesk output: $output"
          if ($output -match "\b(\d{9})\b") {
            $id = $Matches[1]
            Write-Host "Found RustDesk ID: $id"
            "rustdesk_id=$id" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            Write-Host "RustDesk ID not found in output. Generating fake for test."
            $id = Get-Random -Minimum 100000000 -Maximum 999999999
            "rustdesk_id=$id" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }

      - name: Display RustDesk Info
        run: |
          $id = "${{ steps.get_rustdesk_id.outputs.rustdesk_id }}"
          Write-Host "==============================="
          Write-Host "RustDesk ID: $id"
          Write-Host "Password: GitHubActions123!"
          Write-Host "==============================="
