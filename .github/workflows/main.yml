name: Windows - RDP Remote Access
on:
  workflow_dispatch:

jobs:
  remote_access:
    name: RDP für Remote-Zugriff einrichten
    runs-on: windows-latest

    steps:
      - name: RDP aktivieren und Benutzer einrichten
        run: |
          Write-Host "Starte die RDP-Einrichtung..."

          # Schritt 1: Remote Desktop aktivieren
          Write-Host "Aktiviere Remote Desktop..."
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Value 1
          Write-Host "Remote Desktop aktiviert."

          # Schritt 2: Firewall-Regel für RDP hinzufügen
          Write-Host "Füge Firewall-Regel für Remote Desktop hinzu..."
          New-NetFirewallRule -DisplayName "RemoteDesktop" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 3389
          Write-Host "Firewall-Regel hinzugefügt."

          # Schritt 3: Neuen Benutzer für RDP erstellen
          $username = "ghrunner"
          $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()'
          $password = (1..16 | ForEach-Object { $chars | Get-Random }) -join ''

          Write-Host "Erstelle neuen Benutzer '$username'..."
          net user $username $password /add /y | Out-Null
          Write-Host "Benutzer '$username' erstellt."

          # Schritt 4: Benutzer zur Remote Desktop Users Gruppe hinzufügen
          Write-Host "Füge Benutzer '$username' zur 'Remote Desktop Users' Gruppe hinzu..."
          net localgroup "Remote Desktop Users" $username /add | Out-Null
          Write-Host "Benutzer '$username' zur Remote Desktop Users Gruppe hinzugefügt."

          # Schritt 5: Interne IP-Adresse des Runners abrufen
          Write-Host "Rufe interne IP-Adresse ab..."
          $ipAddress = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.InterfaceAlias -like "Ethernet*" -and $_.PrefixOrigin -eq "Dhcp"}).IPAddress
          if (-not $ipAddress) {
              $ipAddress = "UNKNOWN_IP"
              Write-Warning "Konnte keine interne IP-Adresse abrufen."
          }
          Write-Host "Interne IP-Adresse: $ipAddress"

          # Schritt 6: RDP-Verbindungsinformationen an den GitHub Actions Workflow-Output ausgeben
          echo "rdp_username=$username" >> $GITHUB_OUTPUT
          echo "rdp_password=$password" >> $GITHUB_OUTPUT
          echo "rdp_internal_ip=$ipAddress" >> $GITHUB_OUTPUT
          Write-Host "RDP-Einrichtung abgeschlossen."

      - name: Runner aktiv halten
        run: |
          # Dieser Schritt hält den GitHub Actions Runner für eine angegebene Dauer aktiv.
          # Dies ist notwendig, damit Sie Zeit haben, sich über RDP zu verbinden (falls ein Tunnel eingerichtet wird).
          # Die maximale Job-Dauer für GitHub Actions beträgt 360 Minuten (6 Stunden).
          $durationMinutes = [int]"${{ github.event.inputs.duration_minutes }}"
          if ($durationMinutes -gt 360) {
              $durationMinutes = 360
              Write-Warning "Dauer auf maximal 360 Minuten begrenzt."
          }
          $durationSeconds = $durationMinutes * 60
          Write-Host "Halte den Runner für $durationMinutes Minuten ($durationSeconds Sekunden) aktiv..."
          Start-Sleep -Seconds $durationSeconds
        shell: pwsh
